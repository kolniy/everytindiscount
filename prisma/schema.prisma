// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

model User {
  id                 String         @id @default(dbgenerated()) @map("_id") @db.ObjectId
  name               String
  email              String         @unique
  role               Role           @default(user)
  phonenumber        String?
  password           String
  createdpackagetype Package_Type[]
  createdpackages    Package[]
  packageplan        Package_Plan[]
  userrefcode        String
  referedby          String
  transactions       Transaction[]
}

enum Role {
  user
  admin
  marketer
}

model Package_Type {
  id          String         @id @default(dbgenerated()) @map("_id") @db.ObjectId
  name        String
  iconname    String
  createdby   User           @relation(fields: [createdbyid], references: [id])
  createdbyid String         @db.ObjectId
  package     Package[]
  packageplan Package_Plan[]
  createdat   DateTime       @default(now())
}

model Package {
  id                             String         @id @default(dbgenerated()) @map("_id") @db.ObjectId
  packagetype                    Package_Type   @relation(fields: [packagetypeId], references: [id])
  packagetypeId                  String         @db.ObjectId
  packagename                    String
  packageimage                   String
  packagediscountpercard         String
  packagediscountperbanktransfer String
  packagedescription             String
  packagelandingpageimage        String
  packagelogo                    String
  createdby                      User           @relation(fields: [createdbyid], references: [id])
  createdbyid                    String         @db.ObjectId
  packageplan                    Package_Plan[]
  createdat                      DateTime       @default(now())
}

model Package_Plan {
  id              String        @id @default(dbgenerated()) @map("_id") @db.ObjectId
  planname        String
  plandescription String
  planprice       Int
  createdby       User          @relation(fields: [createdbyid], references: [id])
  createdbyid     String        @db.ObjectId
  packagetypeid   String        @db.ObjectId
  packagetype     Package_Type  @relation(fields: [packagetypeid], references: [id])
  package         Package       @relation(fields: [packageid], references: [id])
  packageid       String        @db.ObjectId
  createdat       DateTime      @default(now())
  transaction     Transaction[]
}

model Transaction {
  id               String        @id @default(dbgenerated()) @map("_id") @db.ObjectId
  createdat        DateTime      @default(now())
  plan             Package_Plan? @relation(fields: [planid], references: [id])
  planid           String?       @db.ObjectId
  reference        String?
  amount           Decimal
  transactionby    User          @relation(fields: [userid], references: [id])
  userid           String        @db.ObjectId
  paymentmethod    String
  status           String
  paymentreference String // payment reference is used to check if the user has made a successful transfer for bank transfer payments
  valuerecipient   String
  isseen           Boolean    @default(false)
  vendor           String
}
